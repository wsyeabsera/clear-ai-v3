# GraphQL schema for the Analyzer Agent

type Mutation {
  """
  Analyze an execution by execution ID
  """
  analyzeExecution(executionId: String!): AnalysisResult!
}

type Query {
  """
  Get analysis by analysis ID
  """
  getAnalysis(analysisId: String!): AnalysisResult
  
  """
  Get analysis by execution ID
  """
  getAnalysisByExecutionId(executionId: String!): AnalysisResult
  
  """
  Get analysis statistics
  """
  getAnalysisStatistics: AnalysisStatistics!
  
  """
  Get historical context for analysis
  """
  getHistoricalContext(query: String!, limit: Int): [AnalyzerMemoryEntry!]!
}

type AnalysisResult {
  analysis_id: String!
  execution_id: String!
  plan_request_id: String!
  feedback: String!
  evaluation_metrics: EvaluationMetrics!
  improvement_notes: String!
  success_indicators: [String!]!
  failure_patterns: [String!]!
  recommendations: [String!]!
}

type EvaluationMetrics {
  success_rate: Float!
  efficiency_score: Float!
  step_success_rates: JSON!
  error_patterns: [String!]!
  retry_frequency: Float!
  average_step_time_ms: Float!
}

type AnalysisStatistics {
  total: Int!
  average_success_rate: Float!
  average_efficiency_score: Float!
  common_error_patterns: [ErrorPatternCount!]!
  average_execution_time: Float!
}

type ErrorPatternCount {
  pattern: String!
  count: Int!
}

type AnalyzerMemoryEntry {
  id: String!
  execution_id: String!
  plan_request_id: String!
  feedback: String!
  evaluation_metrics: EvaluationMetrics!
  improvement_notes: String!
  metadata: AnalyzerMemoryMetadata!
}

type AnalyzerMemoryMetadata {
  timestamp: String!
  user_query: String!
}

scalar JSON
